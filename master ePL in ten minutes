### 前言

    epl的学习需要您有一点点的c语言基础，此外最好有一点区块链的基础认知。因为在已知的各种xel资料汇集后，我们发现，如果您具备以上的两个知识储备，
  那么会将更容易理解和掌握epl。
    如果您去查看各种整理后的资料，会发现各个的知识点和应用的各部分都比较零碎。此教程的作用也基于此考虑，重点把一些关键的、零碎的问题，穿插起来。
  即便如此，我们仍然建议您能够每个文档都看一看，细节查一查。这样虽然过程相对是痛苦漫长的，但是您对epl应用的想象力，也将更有依据，对前后几个阶段
  的应用，也将更能容易地贯穿前后。
    最后，不要幻想没有一点的积累就能够在短时间内掌握一门哪怕很简单的语言。我们也只是尝试性的去把epl应用的流程讲清楚，尽量说明白。当然，如前所述，
  还是强烈建议您先看一看以下的三篇文章（我们准备的有中文版本），相信只要有基础，不用我们的总结，您也能够掌控整个流程。
      epl概述：https://github.com/kyiss/xel-miner/blob/master/epl-language-notes.md
      epl编程篇:https://github.com/kyiss/wiki/blob/master/e-pl-programming.md
      epl发布任务:https://github.com/kyiss/wiki/blob/master/e-pl-submitting-tasks.md
    正常人的语速大概是秒三百字，我们尽量使用10分钟的讲解时间，在1000字内，让您明白epl是什么，xel有什么，它们怎么用，具体怎么做等等。。。
    
### 认识ePL和 XEL网络

  ## xel网络是什么
        想必您应该是了解xel网络（以下简称为xel）是什么的，在此我就不重复了。但是xel能解决什么问题，用在什么地方，我想您应该是模糊的、不明确的、
    缺少引导的，就如同之前的我一样。只是模糊得知道xel是一个分布式算力网络，但是工作机制是什么，有什么作用，都不甚了解（后续再补充）。
        其实也没那么复杂，xel简单说，让您可以使用连接于xel网络的各个的miner，激励它们提供闲散的算力，然后汇集到一起，供您调用。算力很抽象，不
    太好理解，所以得到的算力是什么样的呢?
        笔者并非专业人员，也未曾与已存在的同类型项目做过对比，只能凭着自己的认识简单与您聊一聊。在这里，您通过miner的算力资源得到的是很多的随机
        数字，网络内的所有miners都在努力地产生更多的随机数，用来匹配你想要的答案。
        如果您对算力的认知并不局限于只有加法器，乘法器或者代码中过的各种运算符号，那么，您将很好的理解这种力量。
        同时，xel网络中有一些配套的东西，比如miner，比如xeline,比如浏览器，比如钱包等等。利用好这些东西，会让您释放xel网络的力量。
        
  ## epl是什么
        我们的ePL就是为了让你更好地去使用这样的算力，可以想象，许多许多的随机数，可能还包含了地球诞生的原始密码。而您要做的只是去定义它们，解码
    它们，然后通过它们来获取您要的答案。这个答案可以是一个数字，可以是一个什么结果，可以是一个趋势，也可以是仅仅的一个无实际意义的数字。xel为您
    提供了无限的可能性。epl要做的就是利用这么多的可能性，去匹配您的问题，去洞察世界。
    
  ## 两者之间的关系是什么，如何快速上手
        在这里，我们来梳理下xel网络的各个部分。首先我们有一个主网，然后一个miner，这两个是我们将要用到的最重要的部分。还有就是xeline，一款任务
    发布和监测的软件，当然您也可以自己通过提供的.py文件进行任务的发布（到主网），监测和结果获取，xeline是集成了这些文件，并提供了一个GUI，方便
    您的使用。
        请记住一点，忘掉所有各部分功能的细节问题，抛开所有这些可能会困惑您的地方，只盯着如何使用这一个目标。而等您掌握了使用的流程，这些困惑，也将
    迎刃而解。
        所以我们以下的内容都将围绕着主网、miner、epl这三点。在此，我们再把各部分功能明确一下，epl是用来写程序的语言，程序是用来描述您任务的功能，
    以上的所有数据流向，都是通过主网来完成的。
        也请您适当的熟悉下钱包，浏览器，xeline以及miner的输出数据等等。
    
  ## 经验分享
        笔者曾经很困惑，困惑于xel的应用范围，困惑于对epl的编程范围等等，现在回头想想，其实这些大部分的困惑都是自己知识储备的局限性所造成的。在此，
    我强烈建议您能秉着包容的态度，对待新生的xel。当前，它还如同一个婴孩，还需要不断的迭代，才能成为您心目中的那个算力王者，请多给它一些时间。
        其实，有心的您应该也发现了，笔者这里并没有过多的讲解细节问题，更多的是一些认知和空间的介绍。所以请见谅，都是无奈之举。对于一个总结性的内容
    来说，必须要帮您建立一个宏观的认识之后，才能快速的把整理好的内容传送于您。就如同武林中的功力传承，您可以一步步的童子功练起，也可以机缘之下的外
    力打通您的任督二脉，然后完成无限内力，统领江湖。
        最后还是要再次的建议您，请多包容，包容。这并不是说xel不好或者说笔者底气不足，并不是这样，笔者只是担心您看不到它好的一面，抛弃了它。。。
        
### 第一分钟
        如同学习其他新的语言，您要做的第一步就是搭建它的环境，然后看一看它的运行流程等等。在xel中，您大多数时间面对的是epl的操作，所以，后文主要是
    epl的讲解。捎带的会提一提一些您可能会注意不到的细节问题。
        开始前的第一分钟（希望您能的手速能跟上节奏）
        1、请准备好xeline      
                              下载：https://github.com/xel-software/xeline。下载后可以直接运行，打开界面就是完整的xeline。
                              注意：
                              1、当前使用testnet进行测试
                              2、测试网发布任务是免费的，但是要保证您的地址有测试代币xel，可以通过水龙头获取测试代币。或者联系管理员。
                              3、任务发布点击左小角的new tast，界面有demo和从文件运行，您可以使用demo测试并观察下运行。
                              4、任务发布成功后，需要等待一段时间，大概几十秒内，等待新的区块到来，然后就能在任务列表内看到您的新任务。
                              5、多看，多动，不要担心遇到什么问题。）
                              
        2、请准备好Notepad++ 
                             1、或者其他文件编辑软件，当前epl还没有自己的编辑器，所以还是需要借助常用的软件。
                             2、按照epl语法写代码，保存为.epl格式就是编译器可以识别的epl文件。
                             
        3、下载我们的find_x.epl文件和find_x.js
                            1、 epl文件保存桌面，js文件保存于C:\Users\您的用户名\AppData\Roaming\Xeline中
                            2、 .js文件是为了让您转换您的结果成为您能识别的数据。其实道理很简单，通用型的xeline软件，获取的数据各式各
                                样，所以，需要一个回调文件，.js格式，从结果中提取您要的那个答案。
                            3、有兴趣的可以查看下回调文件的内细节。请按要求的目录存放。
        
  ## 搭建环境，各组件部分之间的关系
        
  ## 创建，发布第一个epl文件，并了解运行流程
  ## 经验分享
### 第二分钟
  ## epl程序结构是什么
### 第三分钟
  ## 如何查看各部分的数据
  ## 进阶epl
### 第四分钟
  ## 此处你需要四分钟的时间去梳理下整体，把不清楚的问题简单的写出来
### 第八分钟
  ## 也许你是一个幸运儿，也许你有更强大的算力支持，也许你还需要等待
  ## 回头看
### 第十分钟
  ## 恭喜你
### 总结
  ## 最后再说点什么
